name: Build Docs
on:
  push:
    branches:
      - main
      - test-me-*
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  # Checks for which PDFs need to be rebuilt
  changes:
    name: üßû Check What Changed
    runs-on: ubuntu-latest
    outputs:
      documentation: ${{ steps.filter.outputs.docs }}
    steps:
      - name: üõé Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: üêç Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: üßû Check What Changed
        id: filter
        run: scripts/what-docs-changed ${{ github.ref_name == 'main' && '--main' || '' }} ${{ github.event_name == 'workflow_dispatch' && '--all' || '' }}

  build_documentation:
    name: üèó Building ${{ matrix.filename }}
    runs-on: ubuntu-latest
    needs:
      - changes
    if: needs.changes.outputs.documentation != '[]'
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJSON(needs.changes.outputs.documentation) }}
    steps:
      - name: üõé Checkout
        uses: actions/checkout@v3

      - name: üë∑ Build LaTeX PDF
        uses: xu-cheng/texlive-action/full@v1
        with:
          run: |
            apk add --update-cache make
            cd docs
            make "${{ matrix.make_cmd }}"

      - name: üíæ Save LaTeX PDF
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.filename }}
          path: "${{ matrix.directory }}/${{ matrix.filename }}"

  publish_pdfs:
    name: üöÄ Publish Built LaTeX PDFs
    needs:
      - build_documentation
    if: needs.changes.outputs.documentation != '[]' && github.ref_name == 'main' && always() # runs even if job cancelled
    runs-on: ubuntu-latest
    steps:
      - name: üõé Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_TOKEN }} # Set to expire May 1, 2023

      - name: üì• Download PDFs
        uses: actions/download-artifact@v3.0.2

      - name: üöß Move PDFs To Correct Directory
        env:
          MG_FILENAME: MG.pdf
          MG_DIR: docs/Design/SoftArchitecture
          MIS_FILENAME: MIS.pdf
          MIS_DIR: docs/Design/SoftDetailedDes
          SYSTDES_FILENAME: SystDes.pdf
          SYSTDES_DIR: docs/Design/SystDesign
          DEVP_FILENAME: DevelopmentPlan.pdf
          DEVP_DIR: docs/DevelopmentPlan
          HAZA_FILENAME: HazardAnalysis.pdf
          HAZA_DIR: docs/HazardAnalysis
          PS_FILENAME: ProblemStatement.pdf
          PS_DIR: docs/ProblemStatementAndGoals
          REFL_FILENAME: Reflection.pdf
          REFL_DIR: docs/Reflection
          SRS_FILENAME: SRS.pdf
          SRS_DIR: docs/SRS
          VNVP_FILENAME: VnVPlan.pdf
          VNVP_DIR: docs/VnVPlan
          VNVR_FILENAME: VnVReport.pdf
          VNVR_DIR: docs/VnVReport
          EXPOES_DIR: docs/Presentations/EXPO/ExecutiveSummary
          EXPOES_FILENAME: ExecutiveSummary.pdf

        run: |
          [ ! -e "$MG_FILENAME/$MG_FILENAME" ]            || mv -v "$MG_FILENAME/$MG_FILENAME" "$MG_DIR/$MG_FILENAME"
          [ ! -e "$MIS_FILENAME/$MIS_FILENAME" ]          || mv -v "$MIS_FILENAME/$MIS_FILENAME" "$MIS_DIR/$MIS_FILENAME"
          [ ! -e "$SYSTDES_FILENAME/$SYSTDES_FILENAME" ]  || mv -v "$SYSTDES_FILENAME/$SYSTDES_FILENAME" "$SYSTDES_DIR/$SYSTDES_FILENAME"
          [ ! -e "$DEVP_FILENAME/$DEVP_FILENAME" ]        || mv -v "$DEVP_FILENAME/$DEVP_FILENAME" "$DEVP_DIR/$DEVP_FILENAME"
          [ ! -e "$HAZA_FILENAME/$HAZA_FILENAME" ]        || mv -v "$HAZA_FILENAME/$HAZA_FILENAME" "$HAZA_DIR/$HAZA_FILENAME"
          [ ! -e "$PS_FILENAME/$PS_FILENAME" ]            || mv -v "$PS_FILENAME/$PS_FILENAME" "$PS_DIR/$PS_FILENAME"
          [ ! -e "$REFL_FILENAME/$REFL_FILENAME" ]        || mv -v "$REFL_FILENAME/$REFL_FILENAME" "$REFL_DIR/$REFL_FILENAME"
          [ ! -e "$SRS_FILENAME/$SRS_FILENAME" ]          || mv -v "$SRS_FILENAME/$SRS_FILENAME" "$SRS_DIR/$SRS_FILENAME"
          [ ! -e "$VNVP_FILENAME/$VNVP_FILENAME" ]        || mv -v "$VNVP_FILENAME/$VNVP_FILENAME" "$VNVP_DIR/$VNVP_FILENAME"
          [ ! -e "$VNVR_FILENAME/$VNVR_FILENAME" ]        || mv -v "$VNVR_FILENAME/$VNVR_FILENAME" "$VNVR_DIR/$VNVR_FILENAME"
          [ ! -e "$EXPOES_FILENAME/$EXPOES_FILENAME" ]    || mv -v "$EXPOES_FILENAME/$EXPOES_FILENAME" "$EXPOES_DIR/$EXPOES_FILENAME"

      - name: üöÄ Add & Commit
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          git add '*.pdf' --force
          git commit -m "Built PDFs via GitHub Actions"
          git push

  collect_results:
    name: üìã Collect Build Results
    needs:
      - changes
      - publish_pdfs
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: üìã Check for Failures
        if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
        run: echo job failed && exit 1
